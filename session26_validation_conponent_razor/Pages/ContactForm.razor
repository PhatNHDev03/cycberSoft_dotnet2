@page "/Contact"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms

<h2>Contact us</h2>

<EditForm EditContext="editContext">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-3">
                <label>Full Name</label>
                <input class="form-control" type="text" value="@contactModel.FullName"
                    @oninput="e => UpdateField(nameof(contactModel.FullName), e.Value.ToString())" />
                <ValidationMessage For="@(() => contactModel.FullName)" />
            </div>
            <div class="form-group mb-3">
                <label>Email</label>
                <input class="form-control" type="text" value="@contactModel.Email"
                    @oninput="e => UpdateField(nameof(contactModel.Email), e.Value.ToString())" />
                <ValidationMessage For="@(() => contactModel.Email)" />
            </div>
            <div class="form-group mb-3">
                <label>Phone Number</label>
                <input class="form-control" type="text" value="@contactModel.PhoneNumber"
                    @oninput="e => UpdateField(nameof(contactModel.PhoneNumber), e.Value.ToString())" />
                <ValidationMessage For="@(() => contactModel.PhoneNumber)" />
            </div>
            <div class="form-group mb-3">
                <label>Address</label>
                <InputText class="form-control" placeholder="Enter your address" @bind-Value="contactModel.Address" />
                <ValidationMessage For="@(() => contactModel.Address)" />
            </div>
            <div class="form-group mb-3">
                <label>Message</label>
                <InputTextArea class="form-control" rows="4" style="resize: none;" @bind-Value="contactModel.Message" />
                <ValidationMessage For="@(() => contactModel.Message)" />
            </div>
            <div class="form-group mb-3 d-flex align-items-center gap-2">
                <InputCheckbox id="agree" @bind-Value="contactModel.IsAgree" />
                <label for="agree"><i>I agree to the terms and conditions</i></label>
                <ValidationMessage For="@(() => contactModel.IsAgree)" />

            </div>
        </div>
        <div class="col-md-6">
            <h3>Information</h3>
            <div class="card p-3">
                <p><strong>Full Name: </strong>@contactModel.FullName</p>
                <p><strong>Email: </strong>@contactModel.Email</p>
                <p><strong>Phone Number: </strong>@contactModel.PhoneNumber</p>
                <p><strong>Address: </strong>@contactModel.Address</p>
                <p><strong>Message: </strong>@contactModel.Message</p>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private EditContext? editContext;
    private ContactModel contactModel = new ContactModel()
    {
        FullName = "Sơn Tùng",
        Email = "sontung@gial.com",
        PhoneNumber = "090146792136",
        Address = "",
        Message = "",
        IsAgree = false
    };

    protected override void OnInitialized()
    {

        editContext = new EditContext(contactModel);
    }

    private void UpdateField(string fieldName, string value)
    {
        if (editContext == null) return; // Tránh lỗi null reference

        var property = typeof(ContactModel).GetProperty(fieldName);
        if (property != null)
        {
            property.SetValue(contactModel, Convert.ChangeType(value, property.PropertyType));
            editContext.NotifyFieldChanged(new FieldIdentifier(contactModel, fieldName));
        }
    }

}
